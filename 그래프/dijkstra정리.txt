간선에 가중치 정보가 있으면 BFS는 사용 불가

다익스트라 알고리즘으로 접근

노드의 수가 10000개 이상일 경우에 


1. 일반적인 다익스트라 : 14938_1.cpp (20210707) : 시간복잡도(V^2)

-->> 간선 정보 vector에 저장
-->> 시작 노드 기준. 거리 배열 초기 값 저장

-->> 이후 가까운 거리의 노드부터 탐색하면서 거리 배열의 값이 점차 갱신되고
-->> 갱신되는 거리 배열을 통해 다른 노드를 탐색할 수 있게됨... 
(하 이 부분이 제일 이해안됐어)(약간 배열의 유동적인 움직임?? DP같은 움직임이..)
(생각하기 버거움 ㅠㅠ 머리가 나빠서 그래...)

-->> 그래도 이 문제 유익하네 ㅋㅅㅋ


2. 개선된 다익스트라 : 14938_2.cpp (20210707) : 시간복잡도(ElogV) (E:Edge)

-->> 개선된 다익스트라에서는 priority queue 사용함
-->> (힙 구조) priority queue는 기본적으로 내림차순 정렬임
-->> greater를 사용하면 오름차순으로 정렬가능
-->> 인자로 pair<int, int>를 넣으면
-->> pair.first를 기준으로 정렬하고 first가 같으면
-->> pair.second를 기준으로 정렬함
-->> 이후 과정은 일반적인 다익스트라와 같음

-->> 다른점이 이제 거리 배열을 매번 확인하지 않고
-->> priority queue를 사용하게 됨

-->+ priority queue에서 우리는 최소 거리부터 탐색할 필요가있음
-->> (최소 거리 탐색이 목표이기 때문)
-->+ priority queue OBJECT 가 있다면 '-'연산자를 더해서 작은거부터 뺄수있는 듯!
-->> 이게 기본 내림차순 정렬이라 그런거같은데... 신기하네
-->> 이걸 음의 가중치라고 하는듯..